#!/usr/bin/env python3

# yarp: yet another registry parser
# (c) Maxim Suhanov

from yarp import RegistryFuse
import llfuse
import os
import sys
import argparse
from collections import namedtuple

PROGRAM_NAME = 'yarp-mount'
PROGRAM_VERSION = '1.0.0-beta11'

Arguments = namedtuple('Arguments', [ 'primary_file', 'mount_point' ])

def parse_args():
	"""Parse command line arguments and return a named tuple (Arguments)."""

	parser = argparse.ArgumentParser(prog = PROGRAM_NAME, description = 'Mount a Windows registry file.', add_help = False, prefix_chars = '-')

	group_main = parser.add_argument_group('Main arguments')
	group_misc = parser.add_argument_group('Miscellaneous arguments')

	group_main.add_argument('file', help = 'a registry file (primary) to mount')
	group_main.add_argument('mountpoint', help = 'a mount point')

	group_misc.add_argument('--help', action = 'help', help = 'show this help message and exit')
	group_misc.add_argument('--version', action = 'version', help = 'show the version number and exit', version = PROGRAM_VERSION)

	parsed_args = parser.parse_args()

	primary_file = parsed_args.file
	mount_point = parsed_args.mountpoint

	return Arguments(primary_file = primary_file, mount_point = mount_point)

args = parse_args()

if not os.path.isfile(args.primary_file):
	print('Primary file does not exist: {}'.format(args.primary_file), file = sys.stderr)
	sys.exit(255)

if not os.path.isdir(args.mount_point):
	print('Mount point does not exist (or not a directory): {}'.format(args.mount_point), file = sys.stderr)
	sys.exit(255)

print('Preparing to mount the registry hive...')

fs = RegistryFuse.YarpFS(args.primary_file)
fuse_options = set(llfuse.default_options)

llfuse.init(fs, args.mount_point, fuse_options)

print('Mounting...')

try:
	llfuse.main()
except Exception:
	llfuse.close()
	raise

llfuse.close()

print('Exiting!')
